给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。
示例 1:

输入: s = "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。

示例 2:

输入: s = "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。

示例 3:

输入: s = "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

提示：

0 <= s.length <= 5 * 104
s 由英文字母、数字、符号和空格组成

当输入为0的时候，输出为1
i(0)-start = 1 --> start = -1

class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:

        start = -1
        max = 0
        dic = {}

        for i in range(len(s)):
            # s[i] in dic
            if s[i] in dic and dic[s[i]]>start:
                start = dic[s[i]]
                dic[s[i]] = i
            # s[i] not in dic
            else:
                dic[s[i]] = i
                if i - start >max:
                    max = i -start

        return max
